name: ${PROJECT_NAME}

services:
  millionluxury.web.api:
    image: ${DOCKER_REGISTRY-}millionluxury.webapi
    container_name: ${PROJECT_NAME}.api
    build:
      context: ..
      dockerfile: src/MillionLuxury.WebApi/Dockerfile
    depends_on:
      - millionluxury.database
    ports:
     - ${API_HTTP_PORT}:8080
     - ${API_HTTPS_PORT}:8081
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ASPNETCORE_HTTPS_PORT=${API_HTTPS_PORT}
    restart: on-failure
    networks:
      - millionluxury-network-public
     
  millionluxury.database:
    image: mcr.microsoft.com/mssql/server:2019-latest
    container_name: ${PROJECT_NAME}.sqlserver.db
    networks:
      - millionluxury-network-public
    restart: on-failure
    env_file:
      - sqlserver.env
    ports:
      - '1433:1433'
    volumes:
      - sqlserver-data:/var/opt/mssql   # solo este

  minio:
    image: minio/minio:latest
    container_name: ${PROJECT_NAME}.minio
    restart: on-failure
    env_file:
      - minio.env
    volumes:
      - vol_minio_storage:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - millionluxury-network-public
    command: server --console-address ":9001" /data

networks:
  millionluxury-network-public:
    driver: bridge

volumes:
  sqlserver-data:
    driver: local
  vol_minio_storage: {}